;; Thanks http://thorne.posterous.com/load-a-directory-full-of-emacs-lisp-files-in
(defvar file-loadable-regexp
  (replace-regexp-in-string "\\." "\\\\."
			    (let (string
				  ;; A list of extensions which Emacs can load
				  (suffix-list (get-load-suffixes)))
			      (concat (car suffix-list) "$"
				      (dolist (extension (cdr suffix-list) string)
					(setq string (concat "\\|" extension "$" string))))))
  "Regular expression that matches any file name with a file extension returned by `get-load-suffixes'.")
(defun file-loadable-p (file)
  "Return t if FILE is an Emacs lisp file.
More precisely, return t if the file name extension matches
`file-loadable-regexp'"
  (string-match file-loadable-regexp file))
(defun load-dir (dir)
  "Load all files in a directory (non-recursive)."
  (let ((files
	 ;; Load a list .el and .elc scripts in the given directory
	 (directory-files (expand-file-name dir) t "^[^.].*\.elc?$")))
    (dolist (file files)
      (when
	  (and
	   (file-loadable-p file)
	   ;; Only load real files, not symlinks
	   (file-exists-p file)
	   ;; Don't try to load directories matching the regex
	   (not (file-directory-p file))
	   ;; Don't load the .el version of a file if there exists an .elc version
	   ;; as well.
	   (not (and (string= (file-name-extension file t) ".el")
		     (member
		      (concat (file-name-sans-extension file) ".elc")
		      files))))
	(load file)))))
