########################################
# ~/.dotfiles/aliases
# Keeps all my aliases between bash and zsh
#
# Sections:
#   -> General Shell
#   -> Editors
#   -> Git
#   -> Ledger
#   -> Distro Specific
#   -> Misc Programs
#   -> Functions
########################################

########################################
# General shell
########################################
alias cp='cp -iv'
alias df='df -h'
alias du='du -h'
alias h='history'
alias la='ls -a --color'
alias lal='ls -lah --color'
alias lb='lsblk'
alias ll='ls -oh --color'
alias ls='ls -h --color'
alias md='mkdir -pv'
alias mv='mv -v'
alias off='sudo shutdown 0'
alias po='popd'
alias pu='pushd'
alias psg='ps -aux | grep -i'
alias rd='rmdir'
alias reboot='sudo reboot'
alias remount='sudo mount -a'
alias rm='rm -v'
alias sl='ls'


########################################
# Editors
########################################
if [[ -x /usr/bin/nvim || -x /usr/local/bin/nvim ]]; then
    alias vim='nvim'
fi

alias em='emacsclient -c --no-wait'
alias realias='vim ~/.dotfiles/aliases; source ~/.dotfiles/aliases'
alias suvi='sudoedit'
alias vi='vim'


########################################
# Version Control
########################################
alias ga='git add'
alias gd='git diff'
alias gc='git commit -m'
alias gpsh='git push'
alias gpll='git pull'
alias gst='git status'
alias gco='git checkout'
alias glog='git log --oneline --decorate --color --graph'

# Get deleted files out of the repo
alias grm="git status | grep deleted | awk '{print \$3}' | xargs git rm"

alias svnrevert='svn status -q | xargs svn revert'

# Prints status of only revision controlled files, ignores unrevisioned stuff (be careful not to miss them on your checkin)
# This is useful when there is a log of autogenerated noise in the ‘svn status’ file list
alias svnstat='svn status . 2> /dev/null | grep -v \?'

# good when merging, checking out, or you want to paste a url into the browser to browse to an alternate branch version of a file
alias svnurl='svn info . 2> /dev/null | grep ^URL: | awk "{ print \$2; }"'



########################################
# Ledger
########################################
alias ledger='ledger --strict --explicit'

alias bal='ledger bal -R'
alias balcash='ledger -R -X $ --current --flat bal assets:bank liabilities:credit'
alias balnet='ledger -R -X $ --current --depth 2 bal assets liabilities'
alias bud='ledger --flat --current bal Budget '
alias budr='ledger -d "d>=[this month]" -S "date" reg Budget and'
alias reg='ledger reg -R --tail 15'

cashflow() {
    if [ -z "$1" ]; then
        period="this month"
    else
        period="$@"
    fi

    ledger --current --invert --real --wide -sV -S "amount" -p $period reg income expenses equity:cash liabilities:loans and not %Disburse
}

xact() {
    ledger xact $@
    read -p "\nIs this correct? Y/N " ans
    case $ans in
        [Yy]* ) ledger xact $@ >> ${LEDGER_CURRENT_FILE}; printf "xact written to ${LEDGER_CURRENT_FILE}\n"
    esac
}


########################################
# Distro Specific
########################################
# Files - ls + g(ui)
if [[ -x /usr/bin/dolphin ]]; then
    alias lsg='dolphin "$(pwd)" 2>/dev/null &' # Dolphin (KDE)
elif [[ -x /usr/bin/nautilus ]]; then
    alias lsg='nautilus "$(pwd)"' # Nautilus (Gnome)
elif [[ -x /usr/bin/nemo ]]; then
    alias lsg='nemo "$(pwd)"' # Nemo (Cinnamon)
elif [[ -x /usr/bin/thunar ]]; then
    alias lsg='thunar "$(pwd)"' # Thunar (XFCE)
fi

# Packages
if [[ -x /usr/bin/yaourt ]]; then
    alias pacs='yaourt -S'
    alias pacu='yaourt -U'
    alias pacr='yaourt -R'
    alias pacq='yaourt -Q | grep'
elif [[ -x /usr/bin/pacman ]]; then
    alias pacs='sudo pacman -S'
    alias pacu='sudo pacman -U'
    alias pacr='sudo pacman -R'
    alias pacq='pacman -Q | grep'
elif [[ -x /usr/bin/apt ]]; then
    alias apti='sudo apt-get install -y'
elif [[ -x /bin/rpm ]]; then
    alias yumi='sudo yum install -y'
    alias yumr='sudo yum remove'
    alias yumq='yum search'
    alias yumup='sudo yum update'
    alias rpmq='rpm -qa | grep'
fi

if [[ -x /usr/bin/vendor_perl/mimeopen ]]; then
    alias open='mimeopen'
else
    alias open='xdg-open'
fi


########################################
# Misc Programs
########################################
alias diff='colordiff'
alias ff='firefox 2>/dev/null &'
alias grep='grep --color'
alias play='mpv'
alias userctl='systemctl --user'
alias xclip='xclip -selection c'

# Redshift will toggle on the USR1 signal
alias redkill='pkill -USR1 redshift'


########################################
# Functions
########################################

# Generic extracting
extract() {
    if [ -f $1 ] ; then
        case $1 in
             *.tar.bz2) tar xjf $1;;
             *.tar.gz) tar xzf $1;;
             *.bz2) bunzip2 $1;;
             *.rar) rar x $1;;
             *.gz) gunzip $1;;
             *.tar) tar xf $1;;
             *.tbz2) tar xjf $1;;
             *.tgz) tar xzf $1;;
             *.zip) unzip $1;;
             *.Z) uncompress $1;;
             *.7z) 7z x $1;;
             *) echo "'$1' cannot be extracted via extract()";;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}
